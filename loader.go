package echojet

import (
	"bytes"
	"io"
	"path/filepath"
)

type BinLoader struct {
	// Path to directory that contains your Jet templates
	Root string

	// Asset func generated by go-bindata
	AssetFunc func(name string) ([]byte, error)
}

type nopCloser struct {
	io.Reader
}

func (nopCloser) Close() error { return nil }

// Open opens the underlying reader with template content.
func (l *BinLoader) Open(name string) (io.ReadCloser, error) {
	b, err := l.AssetFunc(filepath.Join(l.Root, name))
	return nopCloser{bytes.NewBuffer(b)}, err
}

// Exists checks for template existence
func (l *BinLoader) Exists(name string) (string, bool) {
	_, err := l.AssetFunc(filepath.Join(l.Root, name))
	if err != nil {
		return "", false
	}

	return name, true
}
